// Mocks generated by Mockito 5.0.3 from annotations
// in minitel_toolbox/test/data/datasources/diagnosis/diagnosis_data_source_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:io' as _i2;

import 'package:minitel_toolbox/core/internet_address/internet_address_manager.dart'
    as _i5;
import 'package:minitel_toolbox/core/process/process_manager.dart' as _i6;
import 'package:minitel_toolbox/data/datasources/emse/stormshield_remote_data_source.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeProcessResult extends _i1.Fake implements _i2.ProcessResult {}

/// A class which mocks [StormshieldRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStormshieldRemoteDataSource extends _i1.Mock
    implements _i3.StormshieldRemoteDataSource {
  MockStormshieldRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> login(
          {String? uid,
          String? pswd,
          String? selectedUrl,
          int? selectedTime}) =>
      (super.noSuchMethod(
          Invocation.method(#login, [], {
            #uid: uid,
            #pswd: pswd,
            #selectedUrl: selectedUrl,
            #selectedTime: selectedTime
          }),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i4.Future<void>);
  @override
  _i4.Future<String> fetchStatus(String? selectedUrl) =>
      (super.noSuchMethod(Invocation.method(#fetchStatus, [selectedUrl]),
          returnValue: Future.value('')) as _i4.Future<String>);
}

/// A class which mocks [InternetAddressManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetAddressManager extends _i1.Mock
    implements _i5.InternetAddressManager {
  MockInternetAddressManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.InternetAddress>> lookup(String? target) =>
      (super.noSuchMethod(Invocation.method(#lookup, [target]),
              returnValue: Future.value(<_i2.InternetAddress>[]))
          as _i4.Future<List<_i2.InternetAddress>>);
}

/// A class which mocks [ProcessManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockProcessManager extends _i1.Mock implements _i6.ProcessManager {
  MockProcessManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ProcessResult> run(String? command, List<String>? args) =>
      (super.noSuchMethod(Invocation.method(#run, [command, args]),
              returnValue: Future.value(_FakeProcessResult()))
          as _i4.Future<_i2.ProcessResult>);
}
