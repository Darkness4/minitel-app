// Mocks generated by Mockito 5.0.3 from annotations
// in minitel_toolbox/test/data/repositories/icalendar_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:connectivity_platform_interface/src/enums.dart' as _i7;
import 'package:minitel_toolbox/core/network/network_info.dart' as _i5;
import 'package:minitel_toolbox/data/datasources/emse/icalendar_local_data_source.dart'
    as _i10;
import 'package:minitel_toolbox/data/datasources/emse/icalendar_remote_data_source.dart'
    as _i9;
import 'package:minitel_toolbox/domain/entities/icalendar/parsed_calendar.dart'
    as _i4;
import 'package:minitel_toolbox/domain/entities/icalendar/timezone.dart' as _i3;
import 'package:minitel_toolbox/domain/repositories/calendar_url_repository.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:timezone/src/location.dart' as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeLocation extends _i1.Fake implements _i2.Location {}

class _FakeTimezoneDescription extends _i1.Fake
    implements _i3.TimezoneDescription {}

class _Fake$TimezoneCopyWith<$Res> extends _i1.Fake
    implements _i3.$TimezoneCopyWith<$Res> {}

class _FakeParsedCalendar extends _i1.Fake implements _i4.ParsedCalendar {}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i7.ConnectivityResult> get result =>
      (super.noSuchMethod(Invocation.getter(#result),
              returnValue: Future.value(_i7.ConnectivityResult.wifi))
          as _i6.Future<_i7.ConnectivityResult>);
}

/// A class which mocks [CalendarURLRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarURLRepository extends _i1.Mock
    implements _i8.CalendarURLRepository {
  MockCalendarURLRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<bool> get isSaved =>
      (super.noSuchMethod(Invocation.getter(#isSaved),
          returnValue: Future.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<String> get({String? username, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #get, [], {#username: username, #password: password}),
          returnValue: Future.value('')) as _i6.Future<String>);
}

/// A class which mocks [Timezone].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimezone extends _i1.Mock implements _i3.Timezone {
  MockTimezone() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Location get tzid => (super.noSuchMethod(Invocation.getter(#tzid),
      returnValue: _FakeLocation()) as _i2.Location);
  @override
  _i3.TimezoneDescription get daylight =>
      (super.noSuchMethod(Invocation.getter(#daylight),
          returnValue: _FakeTimezoneDescription()) as _i3.TimezoneDescription);
  @override
  _i3.TimezoneDescription get standard =>
      (super.noSuchMethod(Invocation.getter(#standard),
          returnValue: _FakeTimezoneDescription()) as _i3.TimezoneDescription);
  @override
  _i3.$TimezoneCopyWith<_i3.Timezone> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$TimezoneCopyWith<_i3.Timezone>())
          as _i3.$TimezoneCopyWith<_i3.Timezone>);
}

/// A class which mocks [ICalendarRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock
    implements _i9.ICalendarRemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<List<int>> streamICalendar(String? url) =>
      (super.noSuchMethod(Invocation.method(#streamICalendar, [url]),
          returnValue: Stream<List<int>>.empty()) as _i6.Stream<List<int>>);
}

/// A class which mocks [ICalendarLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock
    implements _i10.ICalendarLocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> cacheICalendar(_i6.Stream<List<int>>? data) =>
      (super.noSuchMethod(Invocation.method(#cacheICalendar, [data]),
          returnValue: Future.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<_i4.ParsedCalendar> getParsedCalendar() =>
      (super.noSuchMethod(Invocation.method(#getParsedCalendar, []),
              returnValue: Future.value(_FakeParsedCalendar()))
          as _i6.Future<_i4.ParsedCalendar>);
}
