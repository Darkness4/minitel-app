import 'package:flutter/material.dart';
import 'package:minitel_toolbox/ui/shared/text_styles.dart';
import 'package:minitel_toolbox/ui/widgets/cards.dart';

class VirtMachineDoc extends StatelessWidget {
  const VirtMachineDoc({
    Key key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return const SingleChildScrollView(
      child: DocCard(
        children: <Widget>[
          BoxMdH("Virtual Machines", 1),
          Text.rich(
            TextSpan(
              style: MinitelTextStyles.body2,
              children: <TextSpan>[
                TextSpan(
                  text: "Une VM, c'est :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "    Une Machine dont les composants sont √©mul√©es.\n",
                      style: MinitelTextStyles.body1,
                    ),
                    TextSpan(
                      text:
                          "    Une Machine qui est strictement isol√©e de l'h√¥te.\n",
                      style: MinitelTextStyles.body1,
                    ),
                    TextSpan(
                      text:
                          "    Comme les composants sont √©mul√©es, les chances de "
                          "crash d'une VM sont largement moins faibles\n\n",
                      style: MinitelTextStyles.body1,
                    ),
                  ],
                ),
                TextSpan(
                  text: "Une VM c'est donc fait pour √™tre trafiqu√© √† mort :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "    -  Utile pour avoir une sandbox et faire plein de tests.\n"
                          "    -  Utile pour s'entra√Æner √† Linux (WM, DM, pilotes, installations...), sans faire p√©ter son dual boot.\n"
                          "    -  Utile pour faire un VPS.\n"
                          "    -  Utile pour faire un compilateur avec un environnement d√©di√© et prot√©g√©.\n\n",
                    ),
                  ],
                ),
                TextSpan(
                  text: "Une VM c'est donc pas fait pour programmer.\n\n"
                      "G√©n√©ralement, une VM a g√©n√©ralement un unique objectif.\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "Exemple: VM1 = Alpine DHCP, VM2 = Alpine DNS, VM3 = GUI Test, VM4 = Router IOSv.\n\n",
                      style: MinitelTextStyles.body1,
                    ),
                  ],
                ),
                TextSpan(
                  text:
                      "Cela va sans dire qu'il est inutile pour une VM d'avoir une interface graphique.\n"
                      "Tr√®s souvent, une connexion SSH est mise en place au lieu d'utiliser l'interface graphique ou TTY.\n\n"
                      "G√©n√©ralement, l'installation d'une VM est rapide et simple :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text: "    -  Cr√©ation d'un disque virtuel > 20 Go\n"
                          "    -  Insertion d'une image Linux dans le port CD √©mul√©\n"
                          "    -  Installation de Linux (similaire √† un dual boot)\n"
                          "    -  Configuration d'un acc√®s SSH/telnet/RDP\n",
                    ),
                  ],
                ),
                TextSpan(
                  text:
                      "Certains hyperviseurs (VirtualBox, VMWare, Hyper-V) sont m√™me √©quip√©s de fonctions d'installation rapide.\n\n"
                      "Cela permet √©galement de vous entra√Æner aux installations dual boot üòÑ.\n\n"
                      "Types de VM :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "    -  Type I : Bare Metal, l'OS est lui-m√™me l'hyperviseur.\n"
                          "    -  Type II : Hosted, l'hyperviseur est h√©berg√© par l'OS h√¥te.\n\n",
                      style: MinitelTextStyles.body1,
                    ),
                  ],
                ),
                TextSpan(
                  text: "Voici l'ordre de pr√©f√©rence d'un Hyperviseur :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "    1.  [Leader] Hyper-V (type 1, Windows, si possible)\n"
                          "    2.  [Visionary] KVM (type 1, Linux, üëç Android)\n"
                          "    3.  [Leader] VMWare Workstation (type 2, üëç pour les r√©seaux, GNS3 et tout le reste)\n"
                          "    4.  [Niche Player] VirtualBox (type 2)\n"
                          "    5.  [Leader] VMware ESXi (type 1, pour les professionnels)\n\n",
                    ),
                  ],
                ),
                TextSpan(
                  text:
                      "Si il s'agit d'avoir un simple environnement de d√©veloppement :\n",
                  children: <TextSpan>[
                    TextSpan(
                      text:
                          "    -  Pour Linux : Docker, (Container Linux, c-√†-d. environnement d√©di√© par application) (Notez que √ßa marche aussi sur Windows parce que √ßa tourne une VM Linux sur Hyper-V en arri√®re plan.)\n"
                          "    -  Pour Windows : Windows Subsystem for Linux 1 (Kernel Linux natif. Attention, le mat√©riel n'est pas √©mul√© !)\n"
                          "    -  Pour Windows : Windows Subsystem for Linux 2 (+ Docker) (Kernel Linux dans une micro-VM. Extr√™mement rapide et RAM dynamiquement allou√©.)\n",
                      style: MinitelTextStyles.body1,
                    ),
                  ],
                ),
              ],
            ),
            textAlign: TextAlign.justify,
          ),
        ],
      ),
    );
  }
}
