import 'package:freezed_annotation/freezed_annotation.dart';

import 'event.dart';
import 'timezone.dart';

part 'parsed_calendar.freezed.dart';

/// Parsed calendar generated by [parseCalendar]
@freezed
abstract class ParsedCalendar with _$ParsedCalendar {
  const factory ParsedCalendar({
    @required @nullable String version,
    @required @nullable String prodID,
    @required @nullable String calscale,
    @required @nullable Timezone timezone,
    @required @nullable List<Event> events,
  }) = _ParsedCalendar;
}

extension ParsedCalendarUtils on ParsedCalendar {
  Iterable<Event> get sortedByDTStart sync* {
    this.events.sort((Event event1, Event event2) =>
        event1.dtstart.compareTo(event2.dtstart));

    for (final event in this.events) {
      yield event;
    }
  }
}
